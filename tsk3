#include <stdio.h>
#include <stdlib.h>
#include <time.h>


int main() {
    int arr[100][100], sizei, sizej;
    printf("Enter the number of lines (<100): ");
    while (scanf_s("%d", &sizei) != 1 || sizei <= 0 || sizei > 100 || getchar() != '\n') {
        printf("Error. Input number. Number > 0\nEnter the number of lines (<100): ");
        rewind(stdin);
    }
    printf("Enter number of columns (<100): ");
    while (scanf_s("%d", &sizej) != 1 || sizej <= 0 || sizej > 100 || getchar() != '\n') {
        printf("Error. Input number. Number > 0\nEnter number of columns: ");
        rewind(stdin);
    }
    int operation;
    printf("Choose an operation:\n1: Random\n2: Keyboard\nSelected operation: ");
    while (!scanf_s("%d", &operation) || operation < 1 || operation>2 || getchar() != '\n') {
        printf("Error.\tChoose an operation (1 or 2): ");
        rewind(stdin);
    }
    switch (operation) {
    case 1:
        srand(time(NULL));
        for (int i = 0; i < sizei; i++) {
            for (int j = 0; j < sizej; j++) {
                arr[i][j] = rand() % 20 - 9;
            }
        }
        break;
    case 2:
        for (int i = 0; i < sizei; i++) {
            for (int j = 0; j < sizej; j++) {
                printf("Input %dx%d number: ", i + 1, j + 1);
                while (!scanf_s("%d", &arr[i][j])) {
                    printf("Error. Input number.\n");
                    rewind(stdin);
                }
            }
        }
        printf("\n");
        break;

    }
    for (int i = 0; i < sizei; i++) {
        for (int j = 0; j < sizej; j++) {
            printf("%5d\t", arr[i][j]);
            if (j == sizej - 1)
                printf("\n");
        }
    }
    printf("\n");
    int fl = 0, MaxOdd = -2147483648, NumOdd = -2147483648, count = 1;
    if (sizei != sizej)
        printf("The matrix is ​​not square.\n");
    else {
        if (sizei % 2 != 0)
            sizei++;
        int polsizei = sizei / 2;
        for (int i = 0; i < sizei; i++) {
            for (int b = i; b < sizei; b++) {
                for (int j = b - fl; j < polsizei; j++) {
                    if (arr[b][j] % 2 != 0)
                        NumOdd = arr[b][j];
                    if (NumOdd > MaxOdd)
                        MaxOdd = NumOdd;
                    break;
                }
            }
            fl++;
            count++;
            if (count == 2) {
                polsizei--;
                count = 0;
            }
        }
        if (MaxOdd == -2147483648)
            printf("\nThere are no odd elements.\n");
        else
            printf("\nMaximum odd number: %d\n", MaxOdd);
    }
    return 0;
}
